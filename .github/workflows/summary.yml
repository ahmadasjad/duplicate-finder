name: Summarize PRs with AI

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  summarize-pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      models: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR diff
        id: diff
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            // First get list of changed files to filter out .md files
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            // Filter out markdown files and create a list of files to include
            const nonMarkdownFiles = files
              .filter(file => !file.filename.endsWith('.md'))
              .map(file => file.filename);

            // If there are no non-markdown files, return empty string
            if (nonMarkdownFiles.length === 0) {
              return '';
            }

            // Get the diff
            const { data } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              mediaType: {
                format: "diff"
              }
            });

            // Split diff into sections by file and filter out .md files
            const sections = data.split('diff --git');
            const filteredSections = sections.filter(section => {
              return nonMarkdownFiles.some(file => section.includes(file));
            });

            // Rejoin the filtered sections and limit to 20k chars
            return filteredSections.length > 0
              ? ('diff --git' + filteredSections.join('diff --git')).substring(0, 20000)
              : '';

      - name: Get changed files
        id: files
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const filesList = files.map(file => `- ${file.filename} (${file.status})`).join('\n');
            return filesList;

      - name: Run AI inference
        id: inference
        uses: actions/ai-inference@v1
        with:
          prompt: |
            Analyze the following GitHub Pull Request and write a clear, concise summary.
            Specially focus on the code changes and their impact on the project. Don't forget to mention 'New Features', 'Bug Fixes', and 'Enhancements', etc.
            Keep the response **under 50 lines**.
            ---
            Title of the PR: ${{ github.event.pull_request.title }}
            Description of the PR:
            ---
            ${{ github.event.pull_request.body }}

            Files changed in this PR:
            ---
            ${{ steps.files.outputs.result }}

            Code Changes in the PR (truncated to first 20,000 characters):
            ---
            ${{ steps.diff.outputs.result }}

      - name: Update PR description with AI summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = ${{ toJson(steps.inference.outputs.response) }};
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: summary
            });
